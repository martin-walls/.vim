global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment():
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
	return x != '0' and y != '0'

def list():
	return env("enumerate") or env("itemize")

endglobal


snippet today "Date"
`date +%F`
endsnippet

snippet box "Box"
`!p snip.rv = '┌' + '─' * (len(t[1]) + 2) + '┐'`
│ $1 │
`!p snip.rv = '└' + '─' * (len(t[1]) + 2) + '┘'`
$0
endsnippet


# generic environment snippet
snippet beg "Begin/end environment" bA
\begin{$1}
$0
\end{$1}
endsnippet

# list environments
snippet ben "Enumerate environment" bA
\begin{enumerate}
\item % (1)
$0
\end{enumerate}
endsnippet

snippet bit "Itemize environment" bA
\begin{itemize}
\item $0
\end{itemize}
endsnippet

context "env('enumerate')"
snippet item "Item" bW
\item % ($1)
$0
endsnippet

context "env('itemize')"
snippet item "Item" bW
\item $0
endsnippet


# equation environments
snippet beq "Equation" bA
\begin{equation}
$0
\end{equation}
endsnippet

snippet bseq "Equation*" bA
\begin{equation*}
$0
\end{equation*}
endsnippet

snippet bal "Align" bA
\begin{align}
$0
\end{align}
endsnippet

snippet bsal "Align*" bA
\begin{align*}
$0
\end{align*}
endsnippet

context "env('align') or env('align*')"
snippet = "= in align" wA
&=
endsnippet

snippet dm "Display math" bA
\begin{align*}
$0
\end{align*}
endsnippet

snippet mk "Inline math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet


# exam question environment
snippet examq "Exam question environment" bA
\begin{examquestion}{$1}{$2}{$3}
\begin{enumerate}
$0
\end{enumerate}
\end{examquestion}
endsnippet

snippet bfr "Frame environment" bA
\begin{frame}
\frametitle{$1}
$0
\end{frame}
endsnippet

snippet bfrit "Itemized frame environment" bA
\begin{frame}
\frametitle{$1}
\begin{itemize}
\item $0
\end{itemize}
\end{frame}
endsnippet

snippet bfi "Figure" bA
\begin{figure}
	\centering
	$0
	\caption{$2}
	\label{fig:$1}
\end{figure}
endsnippet

snippet btbl "Tabular" bA
\begin{tabular}{$1}
$0
\end{tabular}
endsnippet

snippet verb "Inline verbatim" w
\verb|$1|$0
endsnippet

# maths notation
context "math()"
snippet 10e "Scientific form" wA
\times 10^{$1}$0
endsnippet

snippet bigo "Big-O notation" wA
\$O($1)\$$0
endsnippet

# fractions
context "math()"
snippet // "Fraction" iA
\frac{$1}{$2}$0
endsnippet

# Greek chars 
snippet @a "alpha" wA
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

# find brackets on top of fraction
context "math()"
priority 1000
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
priority 10
snippet bar "bar" wA
\overline{$1}$0
endsnippet
context "math()"
priority 100
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv = match.group(1)`}
endsnippet

priority 10
context "math()"
snippet hat "hat" wA
\hat{$1}$0
endsnippet
priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv = match.group(1)`}
endsnippet

# brackets with left/right
context "math()"
snippet @( "Round brackets" iA
\left ( $1 \right )$0
endsnippet
context "math()"
snippet @[ "Square brackets" iA
\left [ $1 \right ]$0
endsnippet
context "math()"
snippet @{ "Curly brackets" iA
\left { $1 \right }$0
endsnippet

##### Greek characters #####
context "math()"
snippet @a "alpha" iA
\alpha
endsnippet
context "math()"
snippet @b "beta" iA
\beta
endsnippet
context "math()"
snippet @d "delta" iA
\delta
endsnippet
context "math()"
snippet @e "epsilon" iA
\epsilon
endsnippet
context "math()"
snippet @ve "varepsilon" iA
\varepsilon
endsnippet
context "math()"
snippet @f "phi" iA
\phi
endsnippet
context "math()"
snippet @g "gamma" iA
\gamma
endsnippet
context "math()"
snippet @k "kappa" iA
\kappa
endsnippet
context "math()"
snippet @l "lambda" iA
\lambda
endsnippet
context "math()"
snippet @m "mu" iA
\mu
endsnippet
context "math()"
snippet @p "pi" iA
\pi
endsnippet
context "math()"
snippet @q "theta" iA
\theta
endsnippet
context "math()"
snippet @s "sigma" iA
\sigma
endsnippet
context "math()"
snippet @o "omega" iA
\omega
endsnippet

context "math()"
snippet @D "Delta" iA
\Delta
endsnippet
context "math()"
snippet @F "Phi" iA
\Phi
endsnippet
context "math()"
snippet @G "Gamma" iA
\Gamma
endsnippet
context "math()"
snippet @P "Pi" iA
\Pi
endsnippet
context "math()"
snippet @Q "Theta" iA
\Theta
endsnippet
context "math()"
snippet @S "Sigma" iA
\Sigma
endsnippet
context "math()"
snippet @O "Omega" iA
\Omega
endsnippet

